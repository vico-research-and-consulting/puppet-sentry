# While a lot of configuration in Sentry can be changed via the UI, for all
# # new-style config (as of 8.0) you can also declare values here in this file
# # to enforce defaults or to ensure they cannot be changed via the UI. For more
# # information see the Sentry documentation.
#
# ###############
# # Mail Server #
# ###############
#
mail.backend: 'django.core.mail.backends.smtp.EmailBackend'  # Use dummy if you want to disable email entirely
mail.host: '<%= @config['email']['host'] %>'
mail.port: <%= @config['email']['port'] %>
mail.username: '<%= @config['email']['user'] %>'
mail.password: '<%= @config['email']['password'] %>'
mail.use-tls: <%= @config['email']['use_tls'].to_s.capitalize! %>
# # The email address to send on behalf of
mail.from: '<%= @config['email']['from_addr'] %>'
#
# # If you'd like to configure email replies, enable this.
# # mail.enable-replies: false
#
# # When email-replies are enabled, this value is used in the Reply-To header
# # mail.reply-hostname: ''
#
# # If you're using mailgun for inbound mail, set your API key and configure a
# # route to forward to /api/hooks/mailgun/inbound/
# # mail.mailgun-api-key: ''
#
# ###################
# # System Settings #
# ###################
#
# # If this file ever becomes compromised, it's important to regenerate your a new key
# # Changing this value will result in all current sessions being invalidated.
# # A new key can be generated with `$ sentry config generate-secret-key`
# system.secret-key: '4g)g6r6kkn*3s*48scra#1k3j!w!!ayq63xj8_qg@*+cc=5nh='
#
# # The ``redis.clusters`` setting is used, unsurprisingly, to configure Redis
# # clusters. These clusters can be then referred to by name when configuring
# # backends such as the cache, digests, or TSDB backend.
# #
# # Two types of clusters are currently supported:
# #
# #   rb.Cluster
# #   A redis blaster cluster is the traditional cluster used by most services
# #   within sentry. This is the default type cluster type.
# #
# #   rediscluster.StrictRedisCluster
# #   An official Redis Cluster can be configured by marking the named group with
# #   the ``is_redis_cluster: True`` flag. In future versions of Sentry more
# #   services will require this type of cluster.
# #
redis.clusters:
  default:
    hosts:
      0:
        host: <%= @config['redis']['host'] %>
        port: <%= @config['redis']['port'] %>
#
#                             ################
#                             # File storage #
#                             ################
#
#                             # Uploaded media uses these `filestore` settings. The available
#                             # backends are either `filesystem` or `s3`.
#
#                             filestore.backend: 'filesystem'
#                             filestore.options:
#                               location: '/tmp/sentry-files'
#
#                               # filestore.backend: 's3'
#                               # filestore.options:
#                               #   access_key: 'AKIXXXXXX'
#                               #   secret_key: 'XXXXXXX'
#                               #   bucket_name: 's3-bucket-name'
